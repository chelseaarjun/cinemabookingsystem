#Design considerations
1. Objects/Entities -
    1.1 Seats
        - seatID: String
        - isReserved: Boolean
        - reserveSeats(List<Seat> seats)
        - getReserverdSeats()
        - geFreeSeats
        - getAllSeats()
        
    1.2 Ticket 
        - ticketID: string
        - seats: array[Seats]
        - generateNewTicketID()

    1.3 Screen
        - seats
        - movieName

    1.3 Theater
        - reserverTickets(int numSeats)
        - confirmSeatSelection(array[]: Seats)
        - checkBooking()
        
    1.4 CinemaBookingApp
        - handle taking user input and actual booking

A Movie theather can have many Showtimes and many Screens
A Screen has a max row and seats per row 
A Showtime is for a particular movie and shown at a particular Screen which determines the number of seats a showtime can have
A Ticket is for particular Showtime and specified number of seats.

The primary design choices
- Separation of concern
- Flexiblity to extend to support multiple screens in future
- Flexiblity to extend to support multiple theaters in future
          
#Assumptions
- No two users are using the system as the same time (there will be conflict as they both might get a reservation number with same seats)
- The system is only making a booking a single movie. So we don't need a movie object to keep track of the movies playing at a theater and their showtimes.
- Even for the single movie there is no showtimes selection needed.